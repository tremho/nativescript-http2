matrix:
  include:
    - stage: "WebPack, Build and Test"
      os: osx
      env:
        - WebPack="iOS"
      osx_image: xcode12.5
      language: node_js
      node_js: "12"
      jdk: oraclejdk8
      script: npm run ci-ios
#    - language: android
#      os: linux
#      env:
#        - WebPack="Android"
#      jdk: oraclejdk8
#      before_install: nvm install stable
#        - export NODE_OPTIONS=--openssl-legacy-provider
#      script: npm run ci-android
#    - language: android
#      env:
#        - BuildAndroid="28"
#      os: linux
#      jdk: oraclejdk8
#      before_install: nvm install stable
#      script:
#        - npm run ci-android
    - os: osx
      env:
        - BuildiOS="12"
        - Xcode="10.0"
      osx_image: xcode12.5
      language: node_js
      node_js: "12"
      jdk: oraclejdk8
      script:
        - npm run ci-ios
    - os: linux
      language: android
      dist: precise
      sudo: required
      jdk: oraclejdk8
      before_script:
        - echo no | android create avd --force -n test -t android-21 -b armeabi-v7a
        - emulator -avd test -no-audio -no-window &
        - android-wait-for-emulator
      before_install:
        - sudo apt-get install libstdc++6
        - nvm install stable
      script: npm run ci-android && npm run start-android
#    - os: osx
#      language: node_js
#      node_js: "12"
#      jdk: oraclejdk8
#      osx_image: xcode12.5
#      script: npm run ci-android

android:
  components:
    - tools
    - platform-tools
    - build-tools-28.0.3
    - android-28
    - extra-android-m2repository
    - sys-img-armeabi-v7a-android-21

before_install:
  - sudo easy_install pip
  - sudo pip install --upgrade pip
  - sudo pip install six

install:
  - echo no | npm install -g nativescript
  - tns usage-reporting disable
  - tns error-reporting disable
